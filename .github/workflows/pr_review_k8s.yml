name: PR Review

on:
  workflow_call:
    inputs:
      deployment:
        default: .k8s/preview.yaml
        description: The deployment file to use for the PR review.
        type: string
        required: false
      environment:
        default: PR Review
        description: The environment to use for the PR review.
        type: string
        required: false
      environment_url:
        default: https://pr-review.example.com
        description: The URL to use for the PR review.
        type: string
        required: false
    secrets:
      K8S_CONFIG:
        required: true
      IAC_TOKEN:
        required: false
      GH_TOKEN:
        description: 'Personal access token passed from the caller workflow'
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN == '' && secrets.IAC_TOKEN || secrets.GH_TOKEN }}
  GH_TOKEN: ${{ secrets.GH_TOKEN == '' && secrets.IAC_TOKEN || secrets.GH_TOKEN }}
  token: ${{ secrets.GH_TOKEN == '' && secrets.IAC_TOKEN || secrets.GH_TOKEN }}

jobs:
  deploy:
    name: Deploy
    if: ${{ github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' }}
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set env
        id: set-env
        run: |
          echo ::set-output name=sha_short::$(git rev-parse --short HEAD)

      - name: Update instead
        run: |
          sed -i 's/{prid}/${{ github.event.number }}/g' ${{ inputs.deployment }}
          sed -i 's/{build-id}/${{ github.run_id }}/g' ${{ inputs.deployment }} || true

      - name: Deploy Environment
        uses: starubiquitous/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.K8S_CONFIG }}
        with:
          args: --insecure-skip-tls-verify apply -f ${{ inputs.deployment }}

      - name: Post comment to Pull Request
        uses: actions/github-script@v7.0.0
        with:
          github-token: ${{ env.GH_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const botComment = comments.find(comment => {
              return comment.body.includes('Deploy Preview for')
            })

            // 2. Prepare format of the comment
            const output = `### <span aria-hidden="true">✅</span> Deploy Preview for ${{ github.repository }} ready!
            |  Name | Link |
            |---------------------------------|------------------------|
            |<span aria-hidden="true">🔨</span> Latest commit | [\`${{ steps.set-env.outputs.sha_short }}\`](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}) |
            |<span aria-hidden="true">🔍</span> Latest deploy log | [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) |
            |<span aria-hidden="true">😎</span> Deploy Preview | [${{ inputs.environment_url }}](${{ inputs.environment_url }}) |`

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
