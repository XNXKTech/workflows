name: Node

on:
  workflow_call:
    inputs:
      runs-on:
        default: "['ubuntu-latest']"
        description: The OSs that the workflow is run on
        required: false
        type: string
      node-version:
        description: 'Stringified JSON object listing target Node versions'
        default: "['16']"
        required: false
        type: string
      env:
        description: Environment variables in key=value pairs. Can be used to pass secrets that aren't officially supported yet as environment variables
        type: string  # pass in string in export shell format eg. MYVAR=myvalue MYVAR2=myvalue2
        default: ''
        required: false
      environment:
        default: Development
        description: The environment to use for the Production.
        type: string
        required: false
      api_url:
        default: 'https://api.xnxk.com'
        description: The API URL to use for the Production.
        type: string
        required: false
      eslint:
        default: true
        description: Whether to run ESLint on the code
        type: boolean
        required: false
      timeout:
        default: 10
        description: The number of minutes to wait for the operation to complete.
        required: false
        type: number
      build_dir:
        default: build
        description: Whether to build the dist folder.
        required: false
        type: string
      fail-fast:
        default: false
        description: "Whether to fail fast or not"
        required: false
        type: boolean

jobs:
  build:
    name: ${{ matrix.node }} Build
    timeout-minutes: ${{ inputs.timeout }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ${{fromJson(inputs.runs-on)}}
        node: ${{fromJson(inputs.node-version)}}

      fail-fast: ${{ inputs.fail-fast }}

    steps:
      - name: Setup env name to lowercase
        id: environment
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ inputs.environment }}

      - name: Setup environment variables
        run: |
          echo "NODE_ENV=${{ steps.environment.outputs.lowercase }}" >> $GITHUB_ENV
          echo "X_ENV=${{ steps.environment.outputs.lowercase }}" >> $GITHUB_ENV
          echo "X_API_URL=${{ inputs.api_url }}" >> $GITHUB_ENV
          echo "${{ env.ENV }}" >> $GITHUB_ENV

      - name: Environment
        run: env | sort

      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node }}

      - name: Setup yarn
        run: npm install -g yarn

      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - uses: actions/cache@v3.0.7
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - name: Cache build
        uses: actions/cache@v3.0.6
        id: build-cache
        with:
          path: |
            ${{ inputs.build_dir }}
          key: ${{ runner.os }}-${{ inputs.build_dir }}-${{ github.sha }}

      - name: Build
        if: steps.build-cache.outputs.cache-hit != 'true'
        env:
          DISABLE_ESLINT_PLUGIN: ${{ inputs.eslint }}
        run: yarn build
