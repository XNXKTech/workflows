name: Python tests

on:
  workflow_call:
    inputs:
      versions:
        default: "['3.8']"
        description: 'The version of python to use'
        required: false
        type: string

jobs:
  tests:
    name: ${{ matrix.versions }} Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        versions: ${{ fromJson(inputs.versions) }}

    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 1

      - name: Install pipenv
        run: pipx install pipenv

      - name: Set up Python ${{ matrix.versions }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.versions }}

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v3.2.5
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run test suite
        run: |
          pipenv run test -v
